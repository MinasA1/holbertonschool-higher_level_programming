0x0A-python-inheritance/ 7-base_geometry.txt
================
Import class:
       >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Check for module docstring:
      >>> m = __import__('7-base_geometry').__doc__
      >>> len(m) > 1
      True

Check for class docstring:
      >>> c = __import__('7-base_geometry').BaseGeometry.__doc__
      >>> len(c) > 1
      True
Check for methods docstring:
      >>> m = __import__('7-base_geometry').BaseGeometry.area.__doc__
      >>> len(m) > 1
      True

      >>> m = __import__('7-base_geometry').BaseGeometry.integer_validator.__doc__
      >>> len(m) > 1
      True

Check given test case:
      >>> bg = BaseGeometry()
      >>> bg.integer_validator("my_int", 12)
      >>> bg.integer_validator("width", 89)

      >>> try:
      ... bg.integer_validator("name", "John")
      >>> except Exception as e:
      ... print("[{}] {}".format(e.__class__.__name__, e))
      [TypeError] name must be an integer

      >>> try:
      ... bg.integer_validator("age", 0)
      >>> except Exception as e:
      ... print("[{}] {}".format(e.__class__.__name__, e))
      [ValueError] age must be greater than 0

      >>> try:
      ... bg.integer_validator("distance", -4)
      >>> except Exception as e:
      ... print("[{}] {}".format(e.__class__.__name__, e))
      [ValueError] distance must be greater than 0
